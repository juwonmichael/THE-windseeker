name: CI/CD Pipeline 10

on:
  workflow_dispatch:

jobs:
  sonar-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.organization=the-windseeker2
            -Dsonar.projectKey=the-windseeker2
            -Dsonar.sources=.
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: |
          DOCKER_TAG=$(echo "${{ secrets.docker_registry }}/the-windseeker:${{ github.sha }}" | tr '[:upper:]' '[:lower:]')
          echo "Using Docker Tag: $DOCKER_TAG"
          docker build -t $DOCKER_TAG .

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
            registry: ${{ secrets.docker_registry }}
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        
      - name: Push Docker image to registry
        run: |
          DOCKER_TAG=$(echo "${{ secrets.docker_registry }}/the-windseeker:${{ github.sha }}" | tr '[:upper:]' '[:lower:]')
          echo "Pushing Docker Tag: $DOCKER_TAG"
          docker push $DOCKER_TAG

      - name: Run Docker container
        run: |
          DOCKER_TAG=$(echo "${{ secrets.docker_registry }}/the-windseeker:${{ github.sha }}" | tr '[:upper:]' '[:lower:]')
          docker run -d -p 3000:3000 $DOCKER_TAG

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "the-windseeker:${{ github.sha }}"
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build-and-test
    environment:
      name: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pull Docker image for staging
        run: |
          DOCKER_TAG=$(echo "${{ secrets.docker_registry }}/the-windseeker:${{ github.sha }}" | tr '[:upper:]' '[:lower:]')
          docker pull $DOCKER_TAG

      - name: Deploy to Staging
        run: |
          DOCKER_TAG=$(echo "${{ secrets.docker_registry }}/the-windseeker:${{ github.sha }}" | tr '[:upper:]' '[:lower:]')
          docker run -d -p 3000:3000 $DOCKER_TAG

      - name: Wait for the application to be ready
        run: sleep 20

      - name: Run DAST scan with OWASP ZAP
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          target: http://localhost:3000

  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: the-windseeker
          IMAGE_TAG: ${{ github.sha }}
        run: echo "deployment completed"